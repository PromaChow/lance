name: Run Regression Benchmarks
on:
  push:
    branches:
      - main

jobs:
  bench_regress:
    defaults:
      run:
        shell: bash
        working-directory: python
    env:
      CC: clang-18
      CXX: clang++-18
    runs-on: warp-custom-gcp-storage-benchmark
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - name: Authenticate with GCS
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_BENCH_STORAGE_USER_KEY }}
      - name: Install bencher
        uses: bencherdev/bencher@main
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: python
      - name: Install dependencies
        run: 'sudo apt update

          sudo apt install -y protobuf-compiler libssl-dev

          '
      - id: measurement-7
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - name: Build
        run: 'python -m venv venv

          source venv/bin/activate

          pip install maturin duckdb requests pytest pytest-benchmark

          maturin develop --locked --release

          '
      - id: measurement-9
        name: Record Measurement After Build
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Build
          task: get-measurement
      - name: Generate datasets
        run: 'python -m venv venv

          source venv/bin/activate

          python python/ci_benchmarks/datagen/gen_all.py

          '
      - id: measurement-11
        name: Record Measurement After Generate datasets
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Generate datasets
          task: get-measurement
      - name: Run benchmarks
        run: "python -m venv venv\nsource venv/bin/activate\nbencher run --project\
          \ weston-lancedb --token ${{ secrets.LANCE_BENCHER_TOKEN }} --adapter python_pytest\
          \ \\\n            --branch main --testbed google-genoa --err --file results.json\
          \ \"python -mpytest --benchmark-json \\\n            results.json python/ci_benchmarks\"\
          \n"
      - id: measurement-13
        name: Record Measurement After Run benchmarks
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run benchmarks
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    timeout-minutes: 30
