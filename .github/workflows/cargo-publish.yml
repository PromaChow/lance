name: Publish Rust crate
on:
  push:
    branches:
      - main

env:
  CARGO_INCREMENTAL: '0'
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -C debuginfo=0
jobs:
  build:
    defaults:
      run:
        working-directory: .
    env:
      CC: clang-18
      CXX: clang++-18
    runs-on: ubuntu-2404-8x-x64
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: rust
      - if: github.event_name == 'workflow_dispatch'
        name: Verify and checkout specified tag
        run: "git fetch --all --tags\nif git rev-parse ${{ github.event.inputs.tag\
          \ }} >/dev/null 2>&1; then\n  git checkout ${{ github.event.inputs.tag }}\n\
          \  echo \"Successfully checked out tag ${{ github.event.inputs.tag }}\"\n\
          else\n  echo \"Error: Tag ${{ github.event.inputs.tag }} does not exist\"\
          \n  echo \"Available tags:\"\n  git tag -l\n  exit 1\nfi\n"
      - id: measurement-4
        name: Record Measurement After Verify and checkout specified tag
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Verify and checkout specified tag
          task: get-measurement
      - name: Install dependencies
        run: 'sudo apt update

          sudo apt install -y protobuf-compiler libssl-dev

          '
      - id: measurement-6
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - uses: albertlockett/publish-crates@v2.2
        with:
          args: --all-features
          path: .
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    timeout-minutes: 60
